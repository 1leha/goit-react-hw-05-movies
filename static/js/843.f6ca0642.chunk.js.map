{"version":3,"file":"static/js/843.f6ca0642.chunk.js","mappings":"mRAmBA,EAhBoB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACrB,GAAKA,EAAL,CACA,IAAMC,EAAcD,EAAOE,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAExD,OAAO,yBAAMH,GAHM,CAIpB,E,SC6CD,EA9Ca,SAAC,GAEP,IAAD,IADJI,aAAgBL,EACZ,EADYA,OAAQM,EACpB,EADoBA,MAAOC,EAC3B,EAD2BA,WAAYC,EACvC,EADuCA,aAAcC,EACrD,EADqDA,SAEnDC,EAAYF,EAAY,UACvBG,KAAKC,MAAqB,GAAfJ,GADY,KAE1B,iBAEJ,OACE,SAACK,EAAA,EAAD,CAAKC,GAAG,UAAUC,GAAI,EAAGC,GAAI,EAAGC,UAAU,WAA1C,UACE,SAAC,IAAD,WACE,UAACJ,EAAA,EAAD,CAAKK,QAAQ,OAAOC,QAAQ,OAA5B,WACE,SAACN,EAAA,EAAD,CACEO,MAAM,QACNC,OAAO,QACPC,SAAS,SACTC,UAAU,QACVC,KAAK,WACLC,aAAa,WANf,UAQE,gBAAKC,IAAKnB,EAAYoB,IAAKrB,OAE7B,UAACO,EAAA,EAAD,YACE,wBAAKP,KACL,wCAAgBI,MAEhB,sCACA,yBAAMD,KAEN,oCACA,SAAC,EAAD,CAAaT,OAAQA,aAMhC,E,6BCvCY4B,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uUAMR,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEQ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAnB,IACZ,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,OAAnB,IAEO,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,QAAlB,IAEJ,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,WAAZ,IAIO,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,OAAnB,IACZ,SAAAT,GAAC,OAAIA,EAAEC,MAAME,OAAOO,cAAnB,IAIDC,GAAuBb,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0XAKd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACP,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEnB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,UAAnB,IACZ,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,OAAnB,IAEO,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,QAAlB,IAEJ,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,WAAZ,IAIO,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,OAAnB,IACZ,SAAAT,GAAC,OAAIA,EAAEC,MAAME,OAAOO,cAAnB,IAIU,SAAAV,GAAC,OAAIA,EAAEC,MAAME,OAAOS,MAAnB,IACZ,SAAAZ,GAAC,OAAIA,EAAEC,MAAME,OAAOO,cAAnB,ICxCRG,EAAW,IAAIC,EAAAA,EAmDrB,EAjDqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAO3C,EAAP,KAAqB4C,EAArB,KAEMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,GACnCC,GAAuBC,OAAOC,KAAKnD,GAAcoD,OASvD,IAPAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA0BC,GAA1B,6EACEV,EADF,SACwBL,EAASgB,SAASD,GAD1C,8EADc,uBAAC,SAAD,2BAIdE,CAAWf,EACZ,GAAE,CAACA,KAEAQ,EAEJ,OACE,6BACE,SAAC,IAAD,WACE,SAAC1B,EAAD,CAAgBkC,GAAIZ,EAApB,wBAGF,SAAC,EAAD,CAAM7C,aAAcA,KAEpB,SAACQ,EAAA,EAAD,CAAKC,GAAG,UAAUE,GAAI,EAAtB,UACE,UAAC,IAAD,YACE,6CACA,UAACH,EAAA,EAAD,CAAKC,GAAG,KAAKI,QAAQ,OAAOC,QAAS,EAArC,WACE,SAACN,EAAA,EAAD,CAAKC,GAAG,KAAR,UACE,SAAC4B,EAAD,CAAsBoB,GAAG,OAAOV,MAAO,CAAEC,KAAMH,GAA/C,qBAIF,SAACrC,EAAA,EAAD,CAAKC,GAAG,KAAR,UACE,SAAC4B,EAAD,CAAsBoB,GAAG,UAAUV,MAAO,CAAEC,KAAMH,GAAlD,2BAMJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,aAMX,C,gICvDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMpB,GAAb,qDACEqB,MADF,iBACS,8FACC,EAAKC,cADN,2CADT,KAKEC,mBALF,iBAKsB,sGACKH,EAAAA,EAAAA,IAAA,qCAAwCI,EAAAA,KAD7C,cACZC,EADY,gBAEKA,EAASC,KAAKC,QAFnB,cAEZC,EAFY,gBAGLA,EAHK,mFALtB,KAWEb,SAXF,mCAWa,WAAMd,GAAN,uGACWmB,EAAAA,EAAAA,IAAA,gBACTnB,EADS,oBACUuB,EAAAA,GADV,oBADX,cACHK,EADG,gBAMDA,EAAMH,KANL,uBAKDvE,EALC,EAKDA,OAAQ2D,EALP,EAKOA,GAAIrD,EALX,EAKWA,MAAOqE,EALlB,EAKkBA,YAAanE,EAL/B,EAK+BA,aAAcC,EAL7C,EAK6CA,SAL7C,UAOiBkE,EAPjB,mDAQFC,EAAAA,GAAgBD,GARd,6BASL,sCATK,eAOHpE,EAPG,uBAWF,CAAEP,OAAAA,EAAQ2D,GAAAA,EAAIrD,MAAAA,EAAOC,WAAAA,EAAYC,aAAAA,EAAcC,SAAAA,IAX7C,4CAXb,2DAyBEoE,UAzBF,mCAyBc,WAAM/B,GAAN,2FACamB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeuB,EAAAA,GADf,oBADb,cACJC,EADI,gBAISA,EAASC,KAAKO,KAJvB,cAIJA,EAJI,gBAMWA,EAAK5E,KAAI,YAA4C,IAAzCyD,EAAwC,EAAxCA,GAAIxD,EAAoC,EAApCA,KAAM4E,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAKpD,MAAO,CAAErB,GAAAA,EAAIxD,KAAAA,EAAM4E,UAAAA,EAAWE,eAJPD,EAAY,UAC5BJ,EAAAA,GAAgBI,GACnB,sCAGL,IAZS,cAMJE,EANI,iBAcGA,EAdH,qFAzBd,2DA0CEC,WA1CF,mCA0Ce,WAAMrC,GAAN,uFACYmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeuB,EAAAA,GADf,oBADZ,cACLC,EADK,gBAKEA,EAASC,KAAKC,QALhB,mFA1Cf,2DAkDEY,YAlDF,mCAkDgB,WAAMC,GAAN,uFACWpB,EAAAA,EAAAA,IAAA,gCACII,EAAAA,GADJ,4DAC8DgB,IAFzE,cACNf,EADM,gBAKCA,EAASC,KAAKC,QALf,mFAlDhB,wD,wGCLO,IAAMH,EAAS,mCAETO,EAAgB,kCAEhBU,EAAsB,CACjCC,KAAM,OACNC,MAAO,QACPC,eAAS,e","sources":["components/MovieGenres/MovieGenres.jsx","components/Card/Card.jsx","Page/MovieDetails/MovieDetails.styled.jsx","Page/MovieDetails/MovieDetails.jsx","utils/apiService.js","utils/options.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieGenres = ({ genres }) => {\n  if (!genres) return;\n  const movieGeners = genres.map(({ name }) => name).join(', ');\n\n  return <div>{movieGeners}</div>;\n};\n\nMovieGenres.propTypes = {\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default MovieGenres;\n","import React from 'react';\nimport { Box } from 'components/Box';\n\nimport PropTypes from 'prop-types';\nimport MovieGenres from 'components/MovieGenres';\nimport { Container } from 'components/Common/Common.styled';\n\nconst Card = ({\n  movieDetales: { genres, title, posterPath, vote_average, overview },\n}) => {\n  const userScore = vote_average\n    ? `${Math.round(vote_average * 10)}%`\n    : 'No users votes';\n\n  return (\n    <Box as=\"section\" mb={5} pb={4} boxShadow=\"toBottom\">\n      <Container>\n        <Box display=\"flex\" gridGap=\"20px\">\n          <Box\n            width=\"200px\"\n            height=\"300px\"\n            overflow=\"hidden\"\n            objectFit=\"cover\"\n            flex=\"0 0 auto\"\n            borderRadius=\"standart\"\n          >\n            <img src={posterPath} alt={title} />\n          </Box>\n          <Box>\n            <h2>{title}</h2>\n            <p>User score: {userScore}</p>\n\n            <h3>Overview</h3>\n            <div>{overview}</div>\n\n            <h4>Genres</h4>\n            <MovieGenres genres={genres} />\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nCard.propTypes = {\n  movieDetales: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Card;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLinkStyled = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  max-width: 100px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px;\n\n  background-color: ${p => p.theme.colors.backButton};\n  color: ${p => p.theme.colors.primary};\n\n  border-radius: ${p => p.theme.radii.standart};\n\n  transition: ${p => p.theme.transitions};\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.hovered};\n    color: ${p => p.theme.colors.backButtonText};\n  }\n`;\n\nexport const AdditionalLinkStyled = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[4]}px;\n\n  background-color: ${p => p.theme.colors.backButton};\n  color: ${p => p.theme.colors.primary};\n\n  border-radius: ${p => p.theme.radii.standart};\n\n  transition: ${p => p.theme.transitions};\n\n  &:hover,\n  :focus {\n    background-color: ${p => p.theme.colors.hovered};\n    color: ${p => p.theme.colors.backButtonText};\n  }\n\n  &.active {\n    background-color: ${p => p.theme.colors.active};\n    color: ${p => p.theme.colors.backButtonText};\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { tmdAPI } from '../../utils/apiService';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Box } from '../../components/Box';\nimport Card from '../../components/Card';\n\nimport { Container } from '../../components/Common/Common.styled';\nimport { BackLinkStyled, AdditionalLinkStyled } from './MovieDetails.styled';\n\nconst movieAPI = new tmdAPI();\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetales, setMovieDetales] = useState({});\n  const location = useLocation();\n  const backLink = location.state?.from ?? '';\n  const isMovieDetalesEmpty = !Object.keys(movieDetales).length;\n\n  useEffect(() => {\n    async function fetchMovie(id) {\n      setMovieDetales(await movieAPI.getMovie(id));\n    }\n    fetchMovie(movieId);\n  }, [movieId]);\n\n  if (isMovieDetalesEmpty) return;\n\n  return (\n    <main>\n      <Container>\n        <BackLinkStyled to={backLink}>Go back</BackLinkStyled>\n      </Container>\n\n      <Card movieDetales={movieDetales} />\n\n      <Box as=\"section\" pb={4}>\n        <Container>\n          <h3>Additional info</h3>\n          <Box as=\"ul\" display=\"flex\" gridGap={3}>\n            <Box as=\"li\">\n              <AdditionalLinkStyled to=\"cast\" state={{ from: backLink }}>\n                Cast\n              </AdditionalLinkStyled>\n            </Box>\n            <Box as=\"li\">\n              <AdditionalLinkStyled to=\"reviews\" state={{ from: backLink }}>\n                Reviews\n              </AdditionalLinkStyled>\n            </Box>\n          </Box>\n\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </Box>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { apiKey, basePosterURL } from './options';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport class tmdAPI {\n  init = async () => {\n    await this.getTrending();\n  };\n\n  getTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n    const trending = await response.data.results;\n    return await trending;\n  };\n\n  getMovie = async movieId => {\n    const movie = await axios.get(\n      `movie/${movieId}?api_key=${apiKey}&language=en-US`\n    );\n\n    const { genres, id, title, poster_path, vote_average, overview } =\n      await movie.data;\n    const posterPath = (await poster_path)\n      ? `${basePosterURL + poster_path}`\n      : 'https://via.placeholder.com/200x300';\n\n    return { genres, id, title, posterPath, vote_average, overview };\n  };\n\n  getActors = async movieId => {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n    );\n    const cast = await response.data.cast;\n\n    const actors = await cast.map(({ id, name, character, profile_path }) => {\n      const actorPhotoPath = profile_path\n        ? `${basePosterURL + profile_path}`\n        : 'https://via.placeholder.com/150x200';\n\n      return { id, name, character, actorPhotoPath };\n    });\n\n    return await actors;\n  };\n\n  getReviews = async movieId => {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n    );\n\n    return await response.data.results;\n  };\n\n  searchMovie = async query => {\n    const response = await axios.get(\n      `search/movie/?api_key=${apiKey}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n\n    return await response.data.results;\n  };\n}\n","export const apiKey = '769e92a3a56ccf8930092eceecb76b44';\nexport const baseURL = 'https://api.themoviedb.org/3';\nexport const basePosterURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const renderMashineStatus = {\n  IDLE: 'idle',\n  EMPTY: 'empty',\n  SUСCESS: 'suсcess',\n};\n"],"names":["genres","movieGeners","map","name","join","movieDetales","title","posterPath","vote_average","overview","userScore","Math","round","Box","as","mb","pb","boxShadow","display","gridGap","width","height","overflow","objectFit","flex","borderRadius","src","alt","BackLinkStyled","styled","NavLink","p","theme","space","colors","backButton","primary","radii","standart","transitions","hovered","backButtonText","AdditionalLinkStyled","active","movieAPI","tmdAPI","movieId","useParams","useState","setMovieDetales","backLink","useLocation","state","from","isMovieDetalesEmpty","Object","keys","length","useEffect","id","getMovie","fetchMovie","to","Suspense","fallback","axios","init","getTrending","getTrendingMovies","apiKey","response","data","results","trending","movie","poster_path","basePosterURL","getActors","cast","character","profile_path","actorPhotoPath","actors","getReviews","searchMovie","query","renderMashineStatus","IDLE","EMPTY","SUСCESS"],"sourceRoot":""}